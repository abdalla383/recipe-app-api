# Specify the Docker Compose file format version
#version: "3.9"

services:
  # Define the 'app' service (your Django application)
  app:
    # Build the Docker image from the current directory (where the Dockerfile is)
    build:
      context: .
      args:
        # for the build argument set it for True
        - DEV=true
    
    # Map port 8000 on the host to port 8000 in the container
    ports:
      - "8000:8000"

    # Mount the local './app' directory into '/app' inside the container
    # This allows live changes to reflect without rebuilding the image
    volumes:
      - ./app:/app

    # Command to run when the container starts: runs Django development server
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db # Service name have been added here.
      - DB_NAME=dev_db
      - DB_USER=dev_user
      - DB_PASSWORD=changeme
    depends_on:
      - db # Ensure the 'db' service is started before 'app'

  # Define the 'db' service (PostgreSQL database)
  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-date:/var/lib/postgresql/data
      # This is the detail for our local server.
    environment:
      - POSTGRES_DB=dev_db
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=changeme



volumes:
  dev-db-date:
    # Define a named volume for the database data